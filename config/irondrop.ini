# ===============================================================================
# IronDrop Configuration File (INI Format)
# ===============================================================================
# 
# 🚀 Welcome to IronDrop! This file contains ALL configuration options with
#    detailed explanations and examples to help you get started quickly.
#
# 📖 How to use this file:
#    1. Copy this file: cp config/irondrop.ini my-config.ini
#    2. Edit the settings below to match your needs
#    3. Run: irondrop --config-file my-config.ini
#
# 🔧 IronDrop v2.5.1+ Features:
#    • Direct streaming uploads with unlimited file size support
#    • Ultra-compact search engine (10M+ files, <100MB RAM)
#    • Zero-dependency single binary
#    • Enterprise-grade security
#
# ⚙️ Configuration Priority (highest to lowest):
#    1. Command line arguments (--port 3000)
#    2. Environment variables (IRONDROP_PORT=3000)
#    3. This configuration file
#    4. Built-in defaults
#
# 📁 File Locations (IronDrop searches in this order):
#    • Custom path: --config-file /path/to/config.ini
#    • Current directory: ./irondrop.ini or ./irondrop.conf
#    • User config: ~/.config/irondrop/config.ini
#    • System config: /etc/irondrop/config.ini (Unix/Linux/macOS)
#
# 💡 Pro Tip: Use environment variables for secrets in production!
#    Example: IRONDROP_PASSWORD=secret123 irondrop --config-file prod.ini
#
# ===============================================================================

# ===============================================================================
# 🖥️  SERVER CONFIGURATION
# ===============================================================================

[server]
# 🌐 Listen Address - Where IronDrop accepts connections
# • 127.0.0.1 = Local access only (safest, default)
# • 0.0.0.0   = Accept from any network interface (LAN access)
# • Specific IP = Bind to a particular network interface
# 
# ⚠️  Security Note: Use 127.0.0.1 for local testing, 0.0.0.0 for network sharing
listen = 127.0.0.1

# 🚪 Port Number - The "door" where IronDrop listens for requests
# • Default: 8080
# • Common alternatives: 3000, 8000, 9000
# • Use ports > 1024 to avoid requiring admin privileges
# • Make sure the port isn't already in use!
port = 6969

# 🧵 Worker Threads - How many requests IronDrop can handle simultaneously
# • Default: 8 threads
# • More threads = handle more concurrent downloads
# • Recommended: 2x your CPU cores for high traffic
# • Example: 4-core CPU → try 8-16 threads
# • Too many threads can actually hurt performance!
threads = 4

# 📦 Chunk Size - How much data to read from files at once (bytes)
# • Default: 1024 bytes (1KB)
# • Larger chunks = faster for big files, more memory usage
# • Smaller chunks = gentler on memory, slower for big files
# • Good values: 1024 (1KB), 4096 (4KB), 8192 (8KB)
chunk_size = 2048

# 📂 Directory - The folder to serve files from
# • REQUIRED if not specified via command line (-d option)
# • Use absolute paths for production: /var/www/files
# • Use relative paths for development: . (current directory)
# • Make sure IronDrop has read permissions!
# • For uploads, IronDrop needs write permissions too
directory = .

# ===============================================================================
# ⬆️  UPLOAD SYSTEM CONFIGURATION
# ===============================================================================

[upload]
# 🚀 Enable Upload Functionality - Allow users to upload files
# • false = Read-only file server (default, safest)
# • true  = Enable uploads via web interface and API
# 
# 🔧 How it works:
# • Small files (<2MB): Stored in memory, then written to disk
# • Large files (>2MB): Direct streaming to disk (constant ~7MB RAM usage)
# • Unlimited file size support with efficient memory usage
# • Upload endpoint: /_irondrop/upload
# 
# ⚠️  Security: Only enable if you trust the users and have proper authentication!
enable_upload = true

# 📏 Maximum Upload File Size - Limit how big uploaded files can be
# • Default: unlimited (with direct streaming)
# • Supports human-readable sizes: B, KB, MB, GB, TB
# • Examples:
#   - 100MB     (100 megabytes)
#   - 2GB       (2 gigabytes) 
#   - 500000000 (500 million bytes)
#   - unlimited (comment out this line)
# 
# 💡 Why set limits?
# • Prevent disk space exhaustion
# • Control bandwidth usage
# • Comply with storage policies
# 
# 🚀 IronDrop's advantage: Even with "unlimited", memory usage stays constant!
max_upload_size = 5GB


# ===============================================================================
# 🔒 SECURITY CONFIGURATION
# ===============================================================================

[security]
# 🛡️ Allowed File Extensions - Control which file types can be downloaded
# • Default: * (allow all file types)
# • Security benefit: Prevent access to sensitive files (.env, .key, etc.)
# • Supports wildcards and comma-separated lists
# 
# 📝 Examples:
#   *.pdf,*.doc,*.zip,*.txt     (documents and archives only)
#   *.jpg,*.png,*.gif,*.mp4     (media files only)
#   *.zip,*.tar.gz,*.7z         (archives only)
#   *                           (allow everything - use with caution!)
# 
# 💡 Pro Tips:
# • Use restrictive lists for public servers
# • Include common formats your users need
# • Test thoroughly - users will complain if they can't access needed files!
# • Remember: This only affects downloads, not uploads
allowed_extensions = *.pdf,*.doc,*.zip,*.txt

# ===============================================================================
# 🔐 AUTHENTICATION CONFIGURATION
# ===============================================================================

[auth]
# 👤 Basic Authentication - Protect your server with username/password
# • Default: disabled (no authentication required)
# • When enabled: ALL access requires login (downloads, uploads, monitoring)
# • Uses HTTP Basic Authentication (works with all browsers and tools)
# 
# 🔒 Security Best Practices:
# • ALWAYS use HTTPS in production (authentication sends credentials!)
# • Use strong, unique passwords (consider password managers)
# • Change default credentials immediately
# • Consider using environment variables for production:
#   IRONDROP_USERNAME=admin IRONDROP_PASSWORD=secret123 irondrop --config-file prod.ini
# 
# 💡 When to use authentication:
# • Serving on public networks (0.0.0.0 listen address)
# • Upload functionality enabled
# • Sensitive or private files
# • Corporate/work environments
# 
# ⚠️  Leave empty or comment out both lines to disable authentication
username = testuser
password = testpass123

# ===============================================================================
# 📝 LOGGING CONFIGURATION
# ===============================================================================

[logging]
# 🐛 Verbose Logging - Maximum detail for debugging and development
# • false = Standard logging (default, recommended for production)
# • true  = Debug-level logging (shows everything IronDrop is doing)
# 
# 🔍 When to enable verbose logging:
# • Troubleshooting connection issues
# • Development and testing
# • Understanding how IronDrop processes requests
# • Investigating performance problems
# 
# ⚠️  Warning: Verbose logging can impact performance and create large log files!
verbose = true

# ℹ️  Detailed Logging - More information than standard, less than verbose
# • false = Minimal logging (errors and warnings only)
# • true  = Info-level logging (shows important events)
# 
# 📊 What you'll see with detailed logging:
# • File access attempts
# • Upload activities
# • Authentication events
# • Performance metrics
# 
# 💡 Good for production monitoring without overwhelming detail
detailed = true

# ===============================================================================
# 📚 CONFIGURATION EXAMPLES
# ===============================================================================
#
# 🏠 Home Media Server Example:
# [server]
# listen = 0.0.0.0
# port = 8080
# directory = /home/user/media
# threads = 8
# 
# [security]
# allowed_extensions = *.mp4,*.mkv,*.avi,*.mp3,*.flac,*.jpg,*.png
# 
# [auth]
# username = family
# password = movie-night-2024
#
# 💼 Corporate File Server Example:
# [server]
# listen = 0.0.0.0
# port = 443
# directory = /var/company-files
# threads = 16
# 
# [upload]
# enable_upload = true
# max_upload_size = 100MB
# 
# [security]
# allowed_extensions = *.pdf,*.doc,*.docx,*.xls,*.xlsx,*.ppt,*.pptx,*.zip
# 
# [auth]
# username = admin
# password = use-environment-variable-instead
# 
# [logging]
# verbose = false
# detailed = true
#
# 🚀 High-Performance Setup Example:
# [server]
# listen = 0.0.0.0
# port = 8080
# directory = /data/files
# threads = 32
# chunk_size = 8192
# 
# [upload]
# enable_upload = true
# # max_upload_size commented out = unlimited
# 
# [logging]
# verbose = false
# detailed = false
#
# ===============================================================================
# 🎯 QUICK START CHECKLIST
# ===============================================================================
#
# ✅ 1. Copy this file: cp config/irondrop.ini my-config.ini
# ✅ 2. Edit the [server] directory = /path/to/your/files
# ✅ 3. Choose your listen address (127.0.0.1 or 0.0.0.0)
# ✅ 4. Set a port (8080 is fine for most cases)
# ✅ 5. Enable uploads if needed (set enable_upload = true)
# ✅ 6. Add authentication for network access (set username/password)
# ✅ 7. Configure allowed file extensions for security
# ✅ 8. Run: irondrop --config-file my-config.ini
# ✅ 9. Open browser: http://localhost:8080 (or your chosen port)
# ✅ 10. Enjoy blazing-fast file sharing! 🚀
#
# 📖 Need more help? Check out:
# • Complete documentation: ./doc/README.md
# • Configuration guide: ./doc/CONFIGURATION_SYSTEM.md
# • Security best practices: ./doc/RFC_OWASP_COMPLIANCE.md
# • Command line help: irondrop --help
#
# ===============================================================================
